==================
RapydScript的介绍
==================

RapydScript是什么
------------------

RapydScript（读音"RapidScript"）本身是一个预编译器，它支持使用与Python相近的语法编写的代码，并可以将其编译为JavaScript。类似的项目还有CoffeeScript。但在语法上，RapydScript更加简洁，更加易读。但是同样允许使用Javascript的语法。

起初RapydScript项目的创建，目的是给那些希望能用类似Python的语法编写JavaScript的人一个替代Pyjamas方案，它不会像Pyjamas那样引入一些额外开销和复杂性。

RapydScrip使你可以使用Python来编写前端代码，并且不会像其他类似框架那样引入额外的开销，它的性能与纯Javascript编写的代码是一样的。对那些熟悉CoffeeScript的人来说，RapydScript与CoffeeScript是很相似的。但是，RapydScript受到的不是Ruby灵巧性，而是Python可读性的启发。

对于熟悉Pyjamas的人来说，RapydScrip引入了许多相同的Python特性和语法支持，但不会带来同样的额外开销。

如果你没有使用过上面提到的两个编译器，那么也不用着急。要是你曾使用过纯Javascript艰难地编写过代码，那么你一定会喜爱上Rapydscript。Rapydscript将Python和JavaScript两者的特性做了最好地结合，并带给你大多数其他Pythonic的JavaScript替代方案所没有的特性。

RapydScript的特性
------------------

下面是一些Rapydscript的特性：

- 类（Class）：使用和感觉上都与Python相似。
- 模块（module）：用于逻辑上抽象，并具有与Python模块相比的更多灵活性。
- 可选的函数参数：使用与Python相似。
- 继承机制：比Python还要强大，并且比JavaScript更简洁。
- 支持定义匿名函数对象：与JavaScript的匿名函数相同。
- 在代码中直接调外部的JavaScript/DOM 对象/函数/方法。不需要使用特殊的语法，并且不用管他们是不是在同一个框架中。
- 变量和对象具有有意义的作用域，再也不需要重复那些 ”var“ 或者 ”new“关键字了。
- 两种方式定义方法或函数。可以使用Python的定义方式，也可以使用JavaScript的定义方式。
- Python或JavaScript的教程（tutorial）都可以使用，包括那些小部件。
- self-hosting：编译器本身就是采用RapydScript编写，再编译成JavaScript代码的方式写成的。
 
好了，不管怎样，我们不必再浪费时间来做过多的介绍了，学习一门新的语言或框架最好的方式就深入它。



